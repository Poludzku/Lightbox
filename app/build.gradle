apply plugin: 'com.android.application'
//Backwards copatibility for lambdas
apply plugin: 'me.tatarka.retrolambda'
//Required for custom Firebase crash reporting
apply plugin: 'com.google.firebase.firebase-crash'


ext {

    //SIGNATURE

    //RELEASE SIGNATURE
    releaseSignatureProperties = new Properties()
    releaseSignatureProperties.load(new FileInputStream(project.file('../../keystores/poludzku-key.properties')))
    releaseSignatureKeystore = '../../keystores/poludzku-key.keystore'

    //DEBUG SIGNATURE
    debugSignatureKeystore = '../../keystores/debug.keystore'
    debugSignaturePassword = 'android'

    //FIREBASE SERVICE ACCOUNT FILE PATH
    //This file is generated by Firebase console https://firebase.google.com/docs/crash/android
    FirebaseServiceAccountFilePath = '../../keystores/firebase-service-account.json'


    //LIBRARY VERSIONS

    autoValueVersion = '1.4.1'
    rxJavaVersion= '2.0.9'
    rxAndroidVersion = '2.0.1'
    butterKnifeVersion = '8.5.1'
    daggerVersion = '2.10'
    jrs250Version = '1.0'
    appCompatVersion = '25.3.1'
    firebaseVersion = '10.2.1'

    testingSupportVersion = '0.5'
    mockitoVersion = '2.7.22'
    assertjVersion = '3.5.2'
    assertJAndroidVersion = '1.1.1'
    junitVersion = '4.12'
    espressoVersion = '2.2.2'
    testingSupportVersion = '0.5'
}

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.3"

    defaultConfig {
        applicationId "com.poludzku.lightbox"
        minSdkVersion 21
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        releaseConfig {
            storeFile file(releaseSignatureKeystore)
            storePassword releaseSignatureProperties.keystore_password
            keyAlias releaseSignatureProperties.key_alias
            keyPassword releaseSignatureProperties.key_password
        }
        debugConfig {
            storeFile file( debugSignatureKeystore )
            storePassword debugSignaturePassword
        }
    }

    buildTypes {
        debug {
            minifyEnabled true
            useProguard false
            debuggable true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        release {
            minifyEnabled true
            useProguard false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.releaseConfig
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    compile "com.android.support:appcompat-v7:$appCompatVersion"
    compile "com.android.support:design:$appCompatVersion"
    compile "com.android.support:support-annotations:$appCompatVersion"

    //INJECTION
    compile "javax.annotation:jsr250-api:$jrs250Version"
    compile "com.google.dagger:dagger:$daggerVersion"
    annotationProcessor "com.google.dagger:dagger-compiler:$daggerVersion"

    //VIEW INJECTION
    compile "com.jakewharton:butterknife:$butterKnifeVersion"
    annotationProcessor "com.jakewharton:butterknife-compiler:$butterKnifeVersion"

    //AUTOVALUE
    provided "com.google.auto.value:auto-value:$autoValueVersion"
    annotationProcessor "com.google.auto.value:auto-value:$autoValueVersion"

    //RX
    compile "io.reactivex.rxjava2:rxjava:$rxJavaVersion"
    compile "io.reactivex.rxjava2:rxandroid:$rxAndroidVersion"

    //FIREBASE

    //CRASH REPORTING
    compile "com.google.firebase:firebase-crash:$firebaseVersion"

    //DATABASE
    compile "com.google.firebase:firebase-database:$firebaseVersion"

    //CLOUD STORAGE
    compile "com.google.firebase:firebase-storage:$firebaseVersion"

    //SIGN IN
    compile "com.google.firebase:firebase-auth:$firebaseVersion"

    //UNIT TESTING
    testCompile "junit:junit:$junitVersion"
    testCompile "org.mockito:mockito-core:$mockitoVersion"
    testCompile "org.mockito:mockito-android:$mockitoVersion"
    testCompile "org.assertj:assertj-core:$assertjVersion"
    testCompile ("com.squareup.assertj:assertj-android:$assertJAndroidVersion") {
        exclude group: 'com.android.support', module: 'support-annotations'
    }

    // ESPRESSO INSTRUMENTATION TESTING
    //TODO remove excludes once library is updated
    androidTestCompile ("com.android.support.test.espresso:espresso-core:$espressoVersion") {
        exclude module: 'support-annotations'
        exclude module: 'appcompat-v7'
        exclude module: 'design'
        exclude module: 'recyclerview-v7'
        exclude module: 'support-v4'
    }
    androidTestCompile("com.android.support.test.espresso:espresso-contrib:$espressoVersion") {
        exclude module: 'support-annotations'
        exclude module: 'appcompat-v7'
        exclude module: 'design'
        exclude module: 'recyclerview-v7'
        exclude module: 'support-v4'
    }
    androidTestCompile ("com.android.support.test.espresso:espresso-intents:$espressoVersion") {
        exclude module: 'support-annotations'
    }
    androidTestCompile ("com.android.support.test:runner:$testingSupportVersion") {
        exclude module: 'support-annotations'
    }
    androidTestCompile ("com.android.support.test:rules:$testingSupportVersion") {
        exclude module: 'support-annotations'
    }
    androidTestCompile ("com.squareup.assertj:assertj-android:$assertJAndroidVersion") {
        exclude module: 'support-annotations'
    }

}
